Application : caractérisation du mélange chaotique d'un colorant
================================================================

Dans cet exercice, on va traiter une série d'images tirées d'une
expérience de mélange d'un fluide coloré dans un fluide transparent.

.. image:: mixing_thumbs.png
    :width: 900px


Dans cette expérience, on mélange un fluide visqueux (sirop de sucre)
avec une tige se déplaçant périodiquement sur une courbe appelée
épitroichoîde (une petite boucle dans une grande boucle). 

Avec ce protocole, on crée ce qui s'appelle de l'`advection chaotique
<http://en.wikipedia.org/wiki/Chaotic_mixing>`_, c'est-à-dire que les
trajectoires lagrangiennes des particules fluides sont chaotiques et
s'éloignent exponentiellement vite au cours du temps. Ce phénomène
d'advection chaotique est bénéfique pour un bon mélange du fluide, car
les points d'une tache de colorant vont s'éloigner très vite les uns des
autres pour former les filaments qu'on voit sur les images, et se
répartir dans une large région du fluide. 

On va commencer par télécharger une série d'images du motif de colorant
prises à chaque fois que la tige revient à sa position initiale : un
fichier zippé avec toutes les images se trouve sur 
https://github.com/python-prepa/mixing-data/zipball/master

Il faut télécharger ce fichier, puis le dézipper.

On peut réaliser ces deux opération en Python, grâce à des
modules de la librairie standard de Python, ``urllib`` et ``zipfile`` ::

    >>> import urllib
    >>> # le telechargement ci-dessous prend quelques minutes
    >>> urllib.urlretrieve('https://github.com/python-prepa/mixing-data/zipball/master', 'data.zip')

    >>> import zipfile
    >>> fichier_data = zipfile.ZipFile('data.zip')
    >>> fichier_data.extractall()

Pas besoin de sortir de Ipython pour réaliser ces opérations !

Extraire la région correspondant au fluide
------------------------------------------

Seule une partie de l'image nous intéresse : celle correspondant au
disque du fluide. Nous allons commencer par créer un masque correspondant
aux pixels du fluide. Pour celà, le plus pratique est de partir d'une des
images sans colorant contenues dans le répertoire ``white_images``. 

Ouvrir une de ces images dans un tableau NumPy ``white``.

On va binariser l'image grâce à un seuil : chercher le seuil le plus
discriminant entre le fluide et le fond grâce à
``skimage.filter.threshold_otsu`` et créer un tableau ``light_mask``
correspondant aux régions claires grâce à ce masque.

Visualiser ``light_mask`` avec ``skimage.io.imshow``. Ce masque
correspond-il exactement à ce que l'on cherche ?

Il va falloir supprimer une

Calculer la proportion du fluide recouverte par du colorant
-----------------------------------------------------------

Tracer l'évolution du mélange
-----------------------------
